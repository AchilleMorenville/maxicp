name: Test and Coverage

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        maven: ['3.8.5']
        java: ['21']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Updated from v1 to v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Cache Maven dependencies
        uses: actions/cache@v3  # Updated to v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ matrix.java }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-${{ matrix.java }}-

      - name: Setup Maven
        uses: s4u/setup-maven-action@v1.2.1
        with:
          java-version: ${{ matrix.java }}
          maven-version: ${{ matrix.maven }}

      - name: Generate test coverage
        id: coverage
        run: |
          mvn compile
          mvn test
          mvn jacoco:report
          display=$(sed -nE 's/^.*<td>Total<([^>]+>){4}([^<]*).*$/\2/p' target/site/jacoco/index.html')
          echo "display=$display" >> $GITHUB_ENV    # with "%"
          coverage=${display%"%"}
          echo "coverage=$coverage" >> $GITHUB_ENV  # without "%"

      - name: Extract branch name
        id: extract_branch
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Checkout badges branch
        uses: actions/checkout@v3  # Updated from v1 to v3
        with:
          ref: badges
          path: badges

      - name: Create badges directory if necessary
        run: mkdir -p badges/${{ env.branch }}

      - name: Generate the badge SVG
        uses: emibcn/badge-action@v2.0.3
        with:
          label: 'Test coverage'
          status: ${{ env.display }}
          color: ${{
            steps.coverage.outputs.coverage > 90 && 'green'              ||
            steps.coverage.outputs.coverage > 80 && 'yellow,green'       ||
            steps.coverage.outputs.coverage > 70 && 'yellow'             ||
            steps.coverage.outputs.coverage > 60 && 'orange,yellow'      ||
            steps.coverage.outputs.coverage > 50 && 'orange'             ||
            steps.coverage.outputs.coverage > 40 && 'red,orange'         ||
            steps.coverage.outputs.coverage > 30 && 'red,red,orange'     ||
            steps.coverage.outputs.coverage > 20 && 'red,red,red,orange' ||
            'red' }}
          path: badges/${{ steps.extract_branch.outputs.branch }}/badge.svg

      - name: Commit & push badge
        run: |
          cd badges
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add "${{ env.branch }}/badge.svg"
          git commit -m "Add/Update badge" || echo "No changes to commit"

      - name: Push badge commit
        run: |
         cd badges
         git push origin badges

